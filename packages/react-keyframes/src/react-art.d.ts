declare module "react-art";

/** Declaration file generated by dts-gen */

// export class LinearGradient {
//     constructor(stops: any, x1: any, y1: any, x2: any, y2: any, ...args: any[]);

//     applyFill(node: any): void;

// }

// export class Path {
//     constructor(a: any, b: any, c: any, d: any, e: any, f: any, g: any, h: any);

//     arc(x: any, y: any, rx: any, ry: any, outer: any, counterClockwise: any, rotation: any): any;

//     arcTo(x: any, y: any, rx: any, ry: any, outer: any, counterClockwise: any, rotation: any): any;

//     close(): any;

//     counterArc(x: any, y: any, rx: any, ry: any, outer: any): any;

//     counterArcTo(x: any, y: any, rx: any, ry: any, outer: any): any;

//     curve(c1x: any, c1y: any, c2x: any, c2y: any, ex: any, ey: any): any;

//     curveTo(c1x: any, c1y: any, c2x: any, c2y: any, ex: any, ey: any): any;

//     initialize(path: any): void;

//     line(x: any, y: any): any;

//     lineTo(x: any, y: any): any;

//     move(x: any, y: any): any;

//     moveTo(x: any, y: any): any;

//     onArc(sx: any, sy: any, ex: any, ey: any, cx: any, cy: any, rx: any, ry: any, sa: any, ea: any, ccw: any, rotation: any): any;

//     onBezierCurve(sx: any, sy: any, p1x: any, p1y: any, p2x: any, p2y: any, x: any, y: any): void;

//     onClose(): void;

//     onLine(sx: any, sy: any, x: any, y: any): void;

//     onMove(sx: any, sy: any, x: any, y: any): void;

//     onReset(): void;

//     push(...args: any[]): any;

//     reset(): any;

//     toString(): any;

//     toVML(): any;

// }

// export class Pattern {
//     constructor(url: any, width: any, height: any, left: any, top: any, ...args: any[]);

//     applyFill(node: any): void;

// }

// export class RadialGradient {
//     constructor(stops: any, fx: any, fy: any, rx: any, ry: any, cx: any, cy: any, ...args: any[]);

//     applyFill(node: any): void;

// }

// export class Surface {
//     constructor(...args: any[]);

//     componentDidMount(): void;

//     componentDidUpdate(prevProps: any, prevState: any): void;

//     componentWillUnmount(): void;

//     render(): any;

// }

// export class Text {
//     constructor(props: any);

//     render(): any;

// }

// export class Transform {
//     constructor(a: any, b: any, c: any, d: any, e: any, f: any, g: any, h: any);

//     initialize(xx: any, yx: any, xy: any, yy: any, x: any, y: any): any;

//     inversePoint(x: any, y: any): any;

//     move(x: any, y: any): any;

//     moveTo(x: any, y: any): any;

//     point(x: any, y: any): any;

//     resizeTo(width: any, height: any): any;

//     rotate(deg: any, x: any, y: any): any;

//     rotateTo(deg: any, x: any, y: any): any;

//     scale(x: any, y: any): any;

//     scaleTo(x: any, y: any): any;

//     transform(xx: any, yx: any, xy: any, yy: any, x: any, y: any): any;

//     transformTo(xx: any, yx: any, xy: any, yy: any, x: any, y: any): any;

//     translate(x: any, y: any): any;

// }

// export const ClippingRectangle: string;

// export const Group: string;

// export const Shape: string;

// export namespace LinearGradient {
//     namespace prototype {
//         function applyFill(node: any): void;

//         namespace applyFill {
//             const prototype: {
//             };

//         }

//     }

// }

// export namespace Path {
//     namespace prototype {
//         class initialize {
//             constructor(path: any);

//             arc(x: any, y: any, rx: any, ry: any, outer: any, counterClockwise: any, rotation: any): any;

//             arcTo(x: any, y: any, rx: any, ry: any, outer: any, counterClockwise: any, rotation: any): any;

//             close(): any;

//             counterArc(x: any, y: any, rx: any, ry: any, outer: any): any;

//             counterArcTo(x: any, y: any, rx: any, ry: any, outer: any): any;

//             curve(c1x: any, c1y: any, c2x: any, c2y: any, ex: any, ey: any): any;

//             curveTo(c1x: any, c1y: any, c2x: any, c2y: any, ex: any, ey: any): any;

//             initialize(path: any): void;

//             line(x: any, y: any): any;

//             lineTo(x: any, y: any): any;

//             move(x: any, y: any): any;

//             moveTo(x: any, y: any): any;

//             onArc(sx: any, sy: any, ex: any, ey: any, cx: any, cy: any, rx: any, ry: any, sa: any, ea: any, ccw: any, rotation: any): any;

//             onBezierCurve(sx: any, sy: any, p1x: any, p1y: any, p2x: any, p2y: any, x: any, y: any): void;

//             onClose(): void;

//             onLine(sx: any, sy: any, x: any, y: any): void;

//             onMove(sx: any, sy: any, x: any, y: any): void;

//             onReset(): void;

//             push(...args: any[]): any;

//             reset(): any;

//             toString(): any;

//             toVML(): any;

//         }

//         function arc(x: any, y: any, rx: any, ry: any, outer: any, counterClockwise: any, rotation: any): any;

//         function arcTo(x: any, y: any, rx: any, ry: any, outer: any, counterClockwise: any, rotation: any): any;

//         function close(): any;

//         function counterArc(x: any, y: any, rx: any, ry: any, outer: any): any;

//         function counterArcTo(x: any, y: any, rx: any, ry: any, outer: any): any;

//         function curve(c1x: any, c1y: any, c2x: any, c2y: any, ex: any, ey: any): any;

//         function curveTo(c1x: any, c1y: any, c2x: any, c2y: any, ex: any, ey: any): any;

//         function line(x: any, y: any): any;

//         function lineTo(x: any, y: any): any;

//         function move(x: any, y: any): any;

//         function moveTo(x: any, y: any): any;

//         function onArc(sx: any, sy: any, ex: any, ey: any, cx: any, cy: any, rx: any, ry: any, sa: any, ea: any, ccw: any, rotation: any): any;

//         function onBezierCurve(sx: any, sy: any, p1x: any, p1y: any, p2x: any, p2y: any, x: any, y: any): void;

//         function onClose(): void;

//         function onLine(sx: any, sy: any, x: any, y: any): void;

//         function onMove(sx: any, sy: any, x: any, y: any): void;

//         function onReset(): void;

//         function push(...args: any[]): any;

//         function reset(): any;

//         function toString(): any;

//         function toVML(): any;

//         namespace arc {
//             const prototype: {
//             };

//         }

//         namespace arcTo {
//             const prototype: {
//             };

//         }

//         namespace close {
//             const prototype: {
//             };

//         }

//         namespace counterArc {
//             const prototype: {
//             };

//         }

//         namespace counterArcTo {
//             const prototype: {
//             };

//         }

//         namespace curve {
//             const prototype: {
//             };

//         }

//         namespace curveTo {
//             const prototype: {
//             };

//         }

//         namespace initialize {
//             namespace prototype {
//                 // Too-deep object hierarchy from react_art.Path.prototype.initialize.prototype
//                 const arc: any;

//                 // Too-deep object hierarchy from react_art.Path.prototype.initialize.prototype
//                 const arcTo: any;

//                 // Too-deep object hierarchy from react_art.Path.prototype.initialize.prototype
//                 const close: any;

//                 // Too-deep object hierarchy from react_art.Path.prototype.initialize.prototype
//                 const counterArc: any;

//                 // Too-deep object hierarchy from react_art.Path.prototype.initialize.prototype
//                 const counterArcTo: any;

//                 // Too-deep object hierarchy from react_art.Path.prototype.initialize.prototype
//                 const curve: any;

//                 // Too-deep object hierarchy from react_art.Path.prototype.initialize.prototype
//                 const curveTo: any;

//                 // Circular reference from react_art.Path.prototype.initialize.prototype
//                 const initialize: any;

//                 // Too-deep object hierarchy from react_art.Path.prototype.initialize.prototype
//                 const line: any;

//                 // Too-deep object hierarchy from react_art.Path.prototype.initialize.prototype
//                 const lineTo: any;

//                 // Too-deep object hierarchy from react_art.Path.prototype.initialize.prototype
//                 const move: any;

//                 // Too-deep object hierarchy from react_art.Path.prototype.initialize.prototype
//                 const moveTo: any;

//                 // Too-deep object hierarchy from react_art.Path.prototype.initialize.prototype
//                 const onArc: any;

//                 // Too-deep object hierarchy from react_art.Path.prototype.initialize.prototype
//                 const onBezierCurve: any;

//                 // Too-deep object hierarchy from react_art.Path.prototype.initialize.prototype
//                 const onClose: any;

//                 // Too-deep object hierarchy from react_art.Path.prototype.initialize.prototype
//                 const onLine: any;

//                 // Too-deep object hierarchy from react_art.Path.prototype.initialize.prototype
//                 const onMove: any;

//                 // Too-deep object hierarchy from react_art.Path.prototype.initialize.prototype
//                 const onReset: any;

//                 // Too-deep object hierarchy from react_art.Path.prototype.initialize.prototype
//                 const push: any;

//                 // Too-deep object hierarchy from react_art.Path.prototype.initialize.prototype
//                 const reset: any;

//                 // Too-deep object hierarchy from react_art.Path.prototype.initialize.prototype
//                 const toString: any;

//                 // Too-deep object hierarchy from react_art.Path.prototype.initialize.prototype
//                 const toVML: any;

//             }

//         }

//         namespace line {
//             const prototype: {
//             };

//         }

//         namespace lineTo {
//             const prototype: {
//             };

//         }

//         namespace move {
//             const prototype: {
//             };

//         }

//         namespace moveTo {
//             const prototype: {
//             };

//         }

//         namespace onArc {
//             const prototype: {
//             };

//         }

//         namespace onBezierCurve {
//             const prototype: {
//             };

//         }

//         namespace onClose {
//             const prototype: {
//             };

//         }

//         namespace onLine {
//             const prototype: {
//             };

//         }

//         namespace onMove {
//             const prototype: {
//             };

//         }

//         namespace onReset {
//             const prototype: {
//             };

//         }

//         namespace push {
//             const prototype: {
//             };

//         }

//         namespace reset {
//             const prototype: {
//             };

//         }

//         namespace toString {
//             const prototype: {
//             };

//         }

//         namespace toVML {
//             const prototype: {
//             };

//         }

//     }

// }

// export namespace Pattern {
//     namespace prototype {
//         function applyFill(node: any): void;

//         namespace applyFill {
//             const prototype: {
//             };

//         }

//     }

// }

// export namespace RadialGradient {
//     namespace prototype {
//         function applyFill(node: any): void;

//         namespace applyFill {
//             const prototype: {
//             };

//         }

//     }

// }

// export namespace Surface {
//     namespace prototype {
//         const isMounted: any;

//         const isReactComponent: {
//         };

//         const replaceState: any;

//         function componentDidMount(): void;

//         function componentDidUpdate(prevProps: any, prevState: any): void;

//         function componentWillUnmount(): void;

//         function forceUpdate(callback: any): void;

//         function render(): any;

//         function setState(partialState: any, callback: any): void;

//         namespace componentDidMount {
//             const prototype: {
//             };

//         }

//         namespace componentDidUpdate {
//             const prototype: {
//             };

//         }

//         namespace componentWillUnmount {
//             const prototype: {
//             };

//         }

//         namespace forceUpdate {
//             const prototype: {
//             };

//         }

//         namespace render {
//             const prototype: {
//             };

//         }

//         namespace setState {
//             const prototype: {
//             };

//         }

//     }

// }

// export namespace Text {
//     namespace prototype {
//         const isMounted: any;

//         const isReactComponent: {
//         };

//         const replaceState: any;

//         function forceUpdate(callback: any): void;

//         function render(): any;

//         function setState(partialState: any, callback: any): void;

//         namespace forceUpdate {
//             const prototype: {
//             };

//         }

//         namespace render {
//             const prototype: {
//             };

//         }

//         namespace setState {
//             const prototype: {
//             };

//         }

//     }

// }

// export namespace Transform {
//     namespace prototype {
//         class initialize {
//             constructor(xx: any, yx: any, xy: any, yy: any, x: any, y: any);

//             initialize(xx: any, yx: any, xy: any, yy: any, x: any, y: any): any;

//             inversePoint(x: any, y: any): any;

//             move(x: any, y: any): any;

//             moveTo(x: any, y: any): any;

//             point(x: any, y: any): any;

//             resizeTo(width: any, height: any): any;

//             rotate(deg: any, x: any, y: any): any;

//             rotateTo(deg: any, x: any, y: any): any;

//             scale(x: any, y: any): any;

//             scaleTo(x: any, y: any): any;

//             transform(xx: any, yx: any, xy: any, yy: any, x: any, y: any): any;

//             transformTo(xx: any, yx: any, xy: any, yy: any, x: any, y: any): any;

//             translate(x: any, y: any): any;

//         }

//         class transformTo {
//             constructor(xx: any, yx: any, xy: any, yy: any, x: any, y: any);

//             initialize(xx: any, yx: any, xy: any, yy: any, x: any, y: any): any;

//             inversePoint(x: any, y: any): any;

//             move(x: any, y: any): any;

//             moveTo(x: any, y: any): any;

//             point(x: any, y: any): any;

//             resizeTo(width: any, height: any): any;

//             rotate(deg: any, x: any, y: any): any;

//             rotateTo(deg: any, x: any, y: any): any;

//             scale(x: any, y: any): any;

//             scaleTo(x: any, y: any): any;

//             transform(xx: any, yx: any, xy: any, yy: any, x: any, y: any): any;

//             transformTo(xx: any, yx: any, xy: any, yy: any, x: any, y: any): any;

//             translate(x: any, y: any): any;

//         }

//         const x: number;

//         const xx: number;

//         const xy: number;

//         const y: number;

//         const yx: number;

//         const yy: number;

//         function inversePoint(x: any, y: any): any;

//         function move(x: any, y: any): any;

//         function moveTo(x: any, y: any): any;

//         function point(x: any, y: any): any;

//         function resizeTo(width: any, height: any): any;

//         function rotate(deg: any, x: any, y: any): any;

//         function rotateTo(deg: any, x: any, y: any): any;

//         function scale(x: any, y: any): any;

//         function scaleTo(x: any, y: any): any;

//         function transform(xx: any, yx: any, xy: any, yy: any, x: any, y: any): any;

//         function translate(x: any, y: any): any;

//         namespace initialize {
//             namespace prototype {
//                 // Circular reference from react_art.Transform.prototype.initialize.prototype
//                 const initialize: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.initialize.prototype
//                 const inversePoint: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.initialize.prototype
//                 const move: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.initialize.prototype
//                 const moveTo: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.initialize.prototype
//                 const point: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.initialize.prototype
//                 const resizeTo: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.initialize.prototype
//                 const rotate: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.initialize.prototype
//                 const rotateTo: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.initialize.prototype
//                 const scale: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.initialize.prototype
//                 const scaleTo: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.initialize.prototype
//                 const transform: any;

//                 // Circular reference from react_art.Transform.prototype.initialize.prototype
//                 const transformTo: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.initialize.prototype
//                 const translate: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.initialize.prototype
//                 const x: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.initialize.prototype
//                 const xx: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.initialize.prototype
//                 const xy: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.initialize.prototype
//                 const y: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.initialize.prototype
//                 const yx: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.initialize.prototype
//                 const yy: any;

//             }

//         }

//         namespace inversePoint {
//             const prototype: {
//             };

//         }

//         namespace move {
//             const prototype: {
//             };

//         }

//         namespace moveTo {
//             const prototype: {
//             };

//         }

//         namespace point {
//             const prototype: {
//             };

//         }

//         namespace resizeTo {
//             const prototype: {
//             };

//         }

//         namespace rotate {
//             const prototype: {
//             };

//         }

//         namespace rotateTo {
//             const prototype: {
//             };

//         }

//         namespace scale {
//             const prototype: {
//             };

//         }

//         namespace scaleTo {
//             const prototype: {
//             };

//         }

//         namespace transform {
//             const prototype: {
//             };

//         }

//         namespace transformTo {
//             namespace prototype {
//                 // Circular reference from react_art.Transform.prototype.transformTo.prototype
//                 const initialize: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.transformTo.prototype
//                 const inversePoint: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.transformTo.prototype
//                 const move: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.transformTo.prototype
//                 const moveTo: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.transformTo.prototype
//                 const point: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.transformTo.prototype
//                 const resizeTo: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.transformTo.prototype
//                 const rotate: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.transformTo.prototype
//                 const rotateTo: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.transformTo.prototype
//                 const scale: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.transformTo.prototype
//                 const scaleTo: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.transformTo.prototype
//                 const transform: any;

//                 // Circular reference from react_art.Transform.prototype.transformTo.prototype
//                 const transformTo: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.transformTo.prototype
//                 const translate: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.transformTo.prototype
//                 const x: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.transformTo.prototype
//                 const xx: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.transformTo.prototype
//                 const xy: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.transformTo.prototype
//                 const y: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.transformTo.prototype
//                 const yx: any;

//                 // Too-deep object hierarchy from react_art.Transform.prototype.transformTo.prototype
//                 const yy: any;

//             }

//         }

//         namespace translate {
//             const prototype: {
//             };

//         }

//     }

// }

